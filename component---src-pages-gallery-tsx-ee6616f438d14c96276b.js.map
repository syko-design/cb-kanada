{"version":3,"sources":["webpack:///./src/components/gallery/gallery.style.ts","webpack:///./src/components/gallery/gallery-dynamic-image.tsx","webpack:///./src/components/gallery/gallery.tsx","webpack:///./src/input/gallery.props.ts","webpack:///./src/pages/gallery.tsx"],"names":["GalleryWrapper","styled","section","FilterWrapper","FilterItemList","ul","FilterItem","li","theme","css","colors","dark200","active","primary100","ImagesWrapper","media","mobileBp","ImageWrapper","count","GalleryBackgroundImage","BackgroundImage","GalleryDynamicImage","alt","fileName","query","render","data","image","images","edges","find","n","node","relativePath","includes","fluid","childImageSharp","Gallery","gallery","useState","filter","setFilter","galleryImages","filtered","setFiltred","queryFilter","useQueryParam","StringParam","handleSetFilter","name","filterGallery","arr","category","useEffect","filterItems","map","item","i","key","onClick","length","path","galleryProps","GalleryPage","title"],"mappings":"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","file":"component---src-pages-gallery-tsx-ee6616f438d14c96276b.js","sourcesContent":["import styled, { css } from 'styled-components'\nimport { ThemeProps } from 'theme/theme.type'\nimport BackgroundImage from 'gatsby-background-image'\n\nexport type FilterItemProps = {\n\tactive: boolean\n} & ThemeProps\n\nexport type ImageWrapperProps = {\n\tcount: number\n} & ThemeProps\n\nexport const GalleryWrapper = styled.section`\n\tmin-height: 100vh;\n\twidth: 90%;\n\tmargin: auto;\n\tmax-width: 1650px;\n`\n\nexport const FilterWrapper = styled.section`\n\tdisplay: flex;\n\tjustify-content: center;\n`\n\nexport const FilterItemList = styled.ul`\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tjustify-content: center;\n\tlist-style-type: none;\n\n\t@media screen and (max-width: 800px) {\n\t\tmargin: 20px 0;\n\t}\n`\n\nexport const FilterItem = styled.li<FilterItemProps>`\n\tcursor: pointer;\n\tpadding: 30px 40px;\n\ttransition: color 0.3s;\n\ttext-align: center;\n\t${({ theme }: FilterItemProps) => css`\n\t\tcolor: ${theme.colors.dark200};\n\t`}\n\n\t${({ active, theme }: FilterItemProps) =>\n\t\tactive &&\n\t\tcss`\n\t\t\tcolor: ${theme.colors.primary100};\n\t\t`}\n\n\t@media screen and (max-width: 800px) {\n\t\tpadding: 10px;\n\t}\n`\n\nexport const ImagesWrapper = styled.section`\n\tdisplay: grid;\n\tgap: 25px;\n\tgrid-template-columns: repeat(4, 1fr);\n\tgrid-auto-rows: 250px;\n\tgrid-auto-flow: dense;\n\n\t@media screen and (max-width: 1350px) {\n\t\tgrid-template-columns: repeat(3, 1fr);\n\t}\n\n\t@media screen and (max-width: ${({ theme }: ThemeProps) => theme.media.mobileBp}) {\n\t\tgrid-template-columns: repeat(2, 1fr);\n\t}\n\n\t@media screen and (max-width: 800px) {\n\t\tgrid-auto-rows: 350px;\n\t\tgrid-template-columns: 1fr;\n\t}\n\n\t@media screen and (max-width: 500px) {\n\t\tgrid-auto-rows: 250px;\n\t}\n`\n\nexport const ImageWrapper = styled.section<ImageWrapperProps>`\n\twidth: 100%;\n\theight: 100%;\n\n\t${({ count }: ImageWrapperProps) =>\n\t\tcount > 8\n\t\t\t? css`\n\t\t\t\t\t&:nth-child(7n) {\n\t\t\t\t\t\tgrid-column: span 2;\n\t\t\t\t\t}\n\n\t\t\t\t\t&:nth-child(2n) {\n\t\t\t\t\t\tgrid-row: span 2;\n\t\t\t\t\t}\n\t\t\t  `\n\t\t\t: css`\n\t\t\t\t\tgrid-row: span 2;\n\t\t\t\t\tgrid-column: span 2;\n\t\t\t  `}\n\n\t@media screen and (max-width: 800px) {\n\t\tgrid-row: span 1 !important;\n\t\tgrid-column: span 1 !important;\n\t}\n\n\tdiv {\n\t\theight: 100%;\n\t}\n`\n\nexport const GalleryBackgroundImage = styled(BackgroundImage)`\n\tbackground-size: cover;\n\tbackground-position: center;\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { GalleryBackgroundImage } from './gallery.style'\n\nexport interface DynamicImageProps {\n\tfileName: string\n\talt: string\n}\n\nexport const GalleryDynamicImage: React.FC<DynamicImageProps> = ({ alt, fileName }) => (\n\t<StaticQuery\n\t\tquery={graphql`\n\t\t\tquery {\n\t\t\t\timages: allFile {\n\t\t\t\t\tedges {\n\t\t\t\t\t\tnode {\n\t\t\t\t\t\t\trelativePath\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tfluid(maxWidth: 815) {\n\t\t\t\t\t\t\t\t\t...GatsbyImageSharpFluid\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t`}\n\t\trender={(data) => {\n\t\t\tconst image = data.images.edges.find((n: any) => {\n\t\t\t\treturn n.node.relativePath.includes(fileName)\n\t\t\t})\n\t\t\tif (!image) {\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\treturn <GalleryBackgroundImage alt={alt} fluid={image.node.childImageSharp.fluid} />\n\t\t}}\n\t/>\n)\n","import React, { useState, useEffect } from 'react'\nimport {\n\tGalleryWrapper,\n\tImagesWrapper,\n\tFilterWrapper,\n\tFilterItemList,\n\tFilterItem,\n\tImageWrapper\n} from './gallery.style'\nimport { galleryProps } from 'input/gallery.props'\nimport { GalleryDynamicImage } from './gallery-dynamic-image'\nimport { useQueryParam, StringParam } from 'use-query-params'\n\nexport interface GalleryProps {\n\tgallery: typeof galleryProps\n}\n\nexport const Gallery: React.FC<GalleryProps> = ({ gallery }) => {\n\tconst [filter, setFilter] = useState('All')\n\tconst [filtered, setFiltred] = useState([...gallery.galleryImages])\n\tconst [queryFilter] = useQueryParam('filter', StringParam)\n\n\tconst handleSetFilter = (name: string) => {\n\t\tsetFilter(name)\n\t\tfilterGallery(name)\n\t}\n\n\tconst filterGallery = (filter: string) => {\n\t\tconst arr = gallery.galleryImages.filter(({ category }) =>\n\t\t\tfilter === 'All' ? true : category === filter\n\t\t)\n\n\t\tsetFiltred(arr)\n\t}\n\n\tuseEffect(() => {\n\t\tif (queryFilter) {\n\t\t\thandleSetFilter(queryFilter)\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<GalleryWrapper>\n\t\t\t<FilterWrapper>\n\t\t\t\t<FilterItemList>\n\t\t\t\t\t{gallery.filterItems.map((item, i) => (\n\t\t\t\t\t\t<FilterItem\n\t\t\t\t\t\t\tkey={i}\n\t\t\t\t\t\t\tactive={item.name === filter}\n\t\t\t\t\t\t\tonClick={() => handleSetFilter(item.name)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</FilterItem>\n\t\t\t\t\t))}\n\t\t\t\t</FilterItemList>\n\t\t\t</FilterWrapper>\n\t\t\t<ImagesWrapper>\n\t\t\t\t{filtered.map((image, i) => (\n\t\t\t\t\t<ImageWrapper key={i} count={filtered.length}>\n\t\t\t\t\t\t<GalleryDynamicImage fileName={image.path} alt=\"galery\" />\n\t\t\t\t\t</ImageWrapper>\n\t\t\t\t))}\n\t\t\t</ImagesWrapper>\n\t\t</GalleryWrapper>\n\t)\n}\n","export const galleryProps = {\n\tfilterItems: [\n\t\t{ name: 'All' },\n\t\t{ name: 'Windows' },\n\t\t{ name: 'Doors' },\n\t\t{ name: 'Railings' },\n\t\t{ name: 'Constructions' }\n\t],\n\tgalleryImages: [\n\t\t{ path: 'gallery/ASE_67_PD_m_Villa_01.jpg', category: 'Windows' },\n\t\t{ path: 'gallery/BR_Schueco_67PD_Haus001.jpg', category: 'Railings' },\n\t\t{ path: 'gallery/ASE_67_PD_m_Villa_02.jpg', category: 'Doors' },\n\t\t{ path: 'gallery/BR_Schueco_67PD_Haus002.jpg', category: 'Constructions' },\n\t\t{ path: 'gallery/ASE_67_PD_m_Villa_01.jpg', category: 'Railings' },\n\t\t{ path: 'gallery/BR_Schueco_67PD_Haus002.jpg', category: 'Railings' },\n\t\t{ path: 'gallery/ASE_67_PD_m_Villa_01.jpg', category: 'Constructions' },\n\t\t{ path: 'gallery/BR_Schueco_67PD_Haus001.jpg', category: 'Constructions' },\n\t\t{ path: 'gallery/ASE_67_PD_m_Villa_02.jpg', category: 'Windows' },\n\t\t{ path: 'gallery/BR_Schueco_67PD_Haus001.jpg', category: 'Windows' },\n\t\t{ path: 'gallery/ASE_67_PD_m_Villa_02.jpg', category: 'Railings' },\n\t\t{ path: 'gallery/BR_Schueco_67PD_Haus002.jpg', category: 'Doors' },\n\t\t{ path: 'gallery/ASE_67_PD_m_Villa_01.jpg', category: 'Doors' },\n\t\t{ path: 'gallery/BR_Schueco_67PD_Haus001.jpg', category: 'Doors' },\n\t\t{ path: 'gallery/ASE_67_PD_m_Villa_02.jpg', category: 'Constructions' },\n\t\t{ path: 'gallery/BR_Schueco_67PD_Haus002.jpg', category: 'Windows' }\n\t]\n}\n","import React from 'react'\nimport { PathProps } from 'types/path.props'\nimport Layout from 'components/templates/layout/layout'\nimport SEO from 'components/templates/seo/seo'\nimport { Gallery } from 'components/gallery/gallery'\nimport { galleryProps } from 'input/gallery.props'\n\nconst GalleryPage: React.FC<PathProps> = ({ path }) => (\n\t<Layout path={path}>\n\t\t<SEO title=\"Gallery\" />\n\t\t<Gallery gallery={galleryProps} />\n\t</Layout>\n)\n\nexport default GalleryPage\n"],"sourceRoot":""}